{"version":3,"file":"a-to-z-search-filter.js","names":["document","addEventListener","form","querySelector","searchInput","sections","querySelectorAll","navLis","searchedList","searchedHeading","clearAllLink","searchedHr","letterToLi","Map","forEach","li","keyEl","letter","textContent","trim","toUpperCase","set","resetView","section","style","display","backToTop","nextElementSibling","classList","contains","h2","id","navLi","get","add","updateDisplay","keywords","Array","from","map","dataset","keyword","length","lettersToShow","Set","lis","matchCount","liText","innerText","toLowerCase","match","some","kw","includes","letterText","has","e","preventDefault","rawInput","value","keywordsArray","split","k","filter","remove","exists","createElement","innerHTML","appendChild","target","closest"],"sources":["a-to-z-search-filter.js"],"sourcesContent":["    // ========================================\n    // A to Z search keyword filtering \n    // ========================================\n    document.addEventListener('DOMContentLoaded', function () {\n        // --- Get references to all the important DOM elements ---\n        const form = document.querySelector('#keywordSearch'); // The search form\n        const searchInput = document.querySelector('#search'); // The search box input\n        const sections = document.querySelectorAll('.nhsuk-card.nhsuk-card--feature'); // All alphabetical sections\n        const navLis = document.querySelectorAll('#nhsuk-nav-a-z ol > li'); // All nav list items (A–Z)\n        const searchedList = document.querySelector('#searched-keywords'); // List of active keywords\n        const searchedHeading = document.querySelector('h3.nhsuk-heading-s.nhsuk-u-visually-hidden'); // Heading for keyword list\n        const clearAllLink = document.querySelector('#clear-all-keywords'); // \"Clear all keywords\" link\n        const searchedHr = document.querySelector('hr.nhsuk-u-visually-hidden'); // Horizontal rule above keyword list\n      \n        // --- Create a lookup map from letter -> nav <li> for quick access ---\n        const letterToLi = new Map();\n        navLis.forEach(li => {\n          const keyEl = li.querySelector('a, span');\n          if (!keyEl) return;\n          const letter = keyEl.textContent.trim().toUpperCase();\n          if (letter) letterToLi.set(letter, li);\n        });\n      \n        /**\n         * Resets the view to its original state:\n         * - Shows all sections and their <li> items\n         * - Shows all navigation letters\n         * - Hides the \"searched keywords\" heading, clear link, and hr\n         */\n        function resetView() {\n          sections.forEach(section => {\n            section.style.display = '';\n            section.querySelectorAll('ul li').forEach(li => li.style.display = '');\n    \n            // Show \"back to top\" if present after section\n            const backToTop = section.nextElementSibling?.classList.contains('nhsuk-back-to-top')\n              ? section.nextElementSibling : null;\n            if (backToTop) backToTop.style.display = '';\n    \n            // Show corresponding nav letter\n            const h2 = section.querySelector('h2');\n            if (h2 && h2.id) {\n              const navLi = letterToLi.get(h2.id.toUpperCase());\n              if (navLi) navLi.style.display = '';\n            }\n          });\n    \n          // Hide keyword UI elements\n          searchedHeading.classList.add('nhsuk-u-visually-hidden');\n          clearAllLink.classList.add('nhsuk-u-visually-hidden');\n          if (searchedHr) searchedHr.classList.add('nhsuk-u-visually-hidden');\n        }\n      \n        /**\n         * Updates the page based on the current list of keywords:\n         * - Only shows <li> items that match ANY active keyword\n         * - Hides sections, nav letters, and back-to-top links with no matches\n         */\n        function updateDisplay() {\n            const keywords = Array.from(searchedList.querySelectorAll('li')).map(li => li.dataset.keyword);\n          \n            if (keywords.length === 0) {\n              resetView();\n              return;\n            }\n          \n            // Keep track of which letters should be visible\n            const lettersToShow = new Set();\n          \n            sections.forEach(section => {\n              const h2 = section.querySelector('h2');\n              const letter = h2?.id ? h2.id.toUpperCase() : null;\n              const lis = section.querySelectorAll('ul li');\n          \n              let matchCount = 0;\n              lis.forEach(li => {\n                const liText = li.innerText.toLowerCase();\n                const match = keywords.some(kw => liText.includes(kw.toLowerCase()));\n                li.style.display = match ? '' : 'none';\n                if (match) matchCount++;\n              });\n          \n              if (matchCount > 0) {\n                section.style.display = '';\n                if (letter) lettersToShow.add(letter);\n                const backToTop = section.nextElementSibling?.classList.contains('nhsuk-back-to-top')\n                  ? section.nextElementSibling : null;\n                if (backToTop) backToTop.style.display = '';\n              } else {\n                section.style.display = 'none';\n                const backToTop = section.nextElementSibling?.classList.contains('nhsuk-back-to-top')\n                  ? section.nextElementSibling : null;\n                if (backToTop) backToTop.style.display = 'none';\n              }\n            });\n          \n            // Now hide nav letters that aren't in lettersToShow\n            navLis.forEach(li => {\n              const letterText = li.textContent.trim().toUpperCase();\n              if (!lettersToShow.has(letterText)) {\n                li.style.display = 'none';\n              } else {\n                li.style.display = '';\n              }\n            });\n          }\n      \n        /**\n         * Handles the search form submission:\n         * - Supports multiple comma-separated keywords in one search\n         * - Adds each keyword as a clickable \"tag\" with an X to remove it\n         * - Avoids adding duplicates\n         */\n        form.addEventListener('submit', function (e) {\n          e.preventDefault();\n    \n          // Get input, trim spaces, and convert to lowercase\n          const rawInput = searchInput.value.trim().toLowerCase();\n          if (!rawInput) return;\n    \n          // Split into an array of keywords by commas, trim, and remove empties\n          const keywordsArray = rawInput.split(',')\n            .map(k => k.trim())\n            .filter(k => k.length > 0);\n    \n          if (keywordsArray.length === 0) return;\n    \n          // Show keyword-related UI elements\n          searchedHeading.classList.remove('nhsuk-u-visually-hidden');\n          clearAllLink.classList.remove('nhsuk-u-visually-hidden');\n          if (searchedHr) searchedHr.classList.remove('nhsuk-u-visually-hidden');\n    \n          // Add each keyword to the list if not already present\n          keywordsArray.forEach(keyword => {\n            const exists = Array.from(searchedList.querySelectorAll('li'))\n              .some(li => li.dataset.keyword === keyword);\n            if (!exists) {\n              const li = document.createElement('li');\n              li.dataset.keyword = keyword;\n              li.innerHTML = `<button type=\"button\" class=\"nhsuk-tag nhsuk-tag--blue a-to-z-search-tag\">\n                                ${keyword} <span class=\"remove-x\">×</span>\n                              </button>`;\n              searchedList.appendChild(li);\n            }\n          });\n    \n          // Clear the search box after adding\n          searchInput.value = '';\n    \n          // Refresh the displayed results\n          updateDisplay();\n        });\n      \n        /**\n         * Handles clicking the X on a keyword tag:\n         * - Removes the keyword from the list\n         * - Updates the displayed sections accordingly\n         */\n        searchedList.addEventListener('click', function (e) {\n          if (e.target.classList.contains('remove-x')) {\n            const li = e.target.closest('li');\n            if (li) {\n              li.remove();\n              updateDisplay();\n            }\n          }\n        });\n      \n        /**\n         * Handles clicking the \"Clear all keywords\" link:\n         * - Empties the keyword list\n         * - Fully resets the page view\n         */\n        clearAllLink.addEventListener('click', function (e) {\n          e.preventDefault();\n          searchedList.innerHTML = '';\n          resetView();\n        });\n    });\n    // ========================================"],"mappings":"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","ignoreList":[]}